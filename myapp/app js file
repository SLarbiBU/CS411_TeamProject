
const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const mongoose = require('mongoose');
const keys = require('./config/keys');
const cookieSession = require('cookie-session'); //incryption for user data
const passportSetup = require('./config/passport-setup');
const passport = require('passport');

//const indexRouter = require('./routes/index');
const usersRouter = require('./routes/users');
const authRouter  = require('./routes/oAuth');
const profileRouter = require('./routes/profile');


const app = express();

// set view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');


//cookie to be sent to browser with user information
// manages user session on the website which helps decide whether a user is logged in or not
app.use(cookieSession({
    maxAge: 24 * 60 * 60 * 1000,//age of the cookie is for a day in milliseconds in this case
    //24 hours * 60 mins per hour * 60 seconds per min * 1000ms per sec
    keys: [keys.session.cookieKey]
}));

//initialize passport
app.use(passport.initialize());
app.use(passport.session());


//connect to mongoDB
mongoose.connect(keys.mongodb.dbURI, () => {
    console.log('connected to mongodb');
});

app.get('/', (req, res) => {
   res.render('index', {user: req.user})
});

//set up routes
//app.use('/', indexRouter);
app.use('/users', usersRouter);
app.use('/auth', authRouter);
app.use('/profile', profileRouter);



app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));


// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
